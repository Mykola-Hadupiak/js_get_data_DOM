{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,EAAc,CAAM,CAAE,CAAS,EACtC,OAAO,EAAO,cAAc,CAAC,EAC/B,CAKA,I,EAAM,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFO,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,EAGjD,GAAG,CAAC,SAAA,CADP,EACiB,MAAA,CAAC,EAAO,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,G,GAG/C,EAAkB,EACrB,MAAM,CAAC,SAAC,CAAA,CAAO,CADlB,EAC4B,OAAA,EAAQ,CAAO,EAAA,EAI3C,CAF+B,SAAS,aAAa,CAAC,qBAE/B,WAAW,CAAG,EAAc,EAAiB,QAEpE,4BAA2B;AAC3B,IAAM,EAAoB,EAAkB,EAAW,MAAM,AAI7D,CAFiC,SAAS,aAAa,CAAC,uBAE/B,WAAW,CAAG,EACrC,EAAmB,Q,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction convertNumber(number, contertTo) {\n    return number.toLocaleString(contertTo);\n}\n// find and make array with all population to number\nvar allPopulationSpan = document.querySelectorAll(\".population\");\nvar population = _to_consumable_array(allPopulationSpan).map(function(amount) {\n    return +amount.textContent.split(\",\").join(\"\");\n});\n// total population logic\nvar totalPopulation = population.reduce(function(item1, item2) {\n    return item1 + item2;\n}, 0);\nvar totalPopulationElement = document.querySelector(\".total-population\");\ntotalPopulationElement.textContent = convertNumber(totalPopulation, \"en-US\");\n// average population logic\nvar averagePopulation = totalPopulation / population.length;\nvar averagePopulationElement = document.querySelector(\".average-population\");\naveragePopulationElement.textContent = convertNumber(averagePopulation, \"en-US\");\n\n//# sourceMappingURL=index.dd89d19d.js.map\n","'use strict';\n\nfunction convertNumber(number, contertTo) {\n  return number.toLocaleString(contertTo);\n}\n\n// find and make array with all population to number\nconst allPopulationSpan = document.querySelectorAll('.population');\n\nconst population = [...allPopulationSpan]\n  .map(amount => +amount.textContent.split(',').join(''));\n\n// total population logic\nconst totalPopulation = population\n  .reduce((item1, item2) => item1 + item2, 0);\n\nconst totalPopulationElement = document.querySelector('.total-population');\n\ntotalPopulationElement.textContent = convertNumber(totalPopulation, 'en-US');\n\n// average population logic\nconst averagePopulation = totalPopulation / population.length;\n\nconst averagePopulationElement = document.querySelector('.average-population');\n\naveragePopulationElement.textContent = convertNumber(\n  averagePopulation, 'en-US',\n);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","convertNumber","number","contertTo","toLocaleString","population","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","amount","textContent","split","join","totalPopulation","reduce","item1","item2","totalPopulationElement","querySelector","averagePopulation","averagePopulationElement"],"version":3,"file":"index.dd89d19d.js.map"}